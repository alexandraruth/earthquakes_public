embassy_risk <- embassy_risk %>%
mutate(pct_20mi = round(100*prob_5yrs_20mi, digits = 2)) %>%
mutate(pct_100mi = round(100*prob_5yrs_100mi, digits = 2)) %>%
mutate(pct_200mi = round(100*prob_5yrs_200mi, digits = 2))
save(embassy_risk, file = "embassy_risk.Rda")
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 20, color="blue", label = as.character(embassy_risk$address), popup = ~paste("Chance of earthquake within 20 mi:", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi:", embassy_risk$pct_100mi, "%",) ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.8, label = ~as.character(mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 20, color="blue", label = as.character(embassy_risk$address), popup = ~paste("Chance of earthquake within 20 mi:", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi:", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.8, label = ~as.character(mag))
m2
sum(embassy_risk$pct_20mi=0)
sum(embassy_risk$pct_20mi==0)
sum(embassy_risk$pct_100mi==0)
sum(embassy_risk$pct_200mi==0)
pal <- colorNumeric(
palette = "Blues",
domain = embassy_risk$pct_20mi)
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 20, color=pal, label = as.character(embassy_risk$address), popup = ~paste("Chance of earthquake within 20 mi:", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi:", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.8, label = ~as.character(mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 20, color=~pal(embassy_risk$pct_20mi), label = as.character(embassy_risk$address), popup = ~paste("Chance of earthquake within 20 mi:", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi:", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.8, label = ~as.character(mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 20, color=~pal(embassy_risk$pct_20mi), label = as.character(embassy_risk$address), popup = ~paste("Chance of earthquake within 20 mi:", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi:", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.8, label = paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 20, color=~pal(embassy_risk$pct_20mi), label = as.character(embassy_risk$address), popup = ~paste("Chance of earthquake within 20 mi:", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi:", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.8, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 20, color="green", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.8, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 20, color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.8, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 10, radius = 20, color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.5, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 20, color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.5, weight = 2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 10, radius = 10, color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.5, weight = 2, label = ~paste("Magnitude:", mag))
m2
?addcircles
?addCircles
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 10, radius = 10, fillColor="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.2, weight = 2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 10, radius = 10, fillOpacity = 1, color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.2, weight = 2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 10, radius = 10, fillOpacity = 10, color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.2, weight = 2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 10, radius = 10,  color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.2, weight = 2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircleMarkers(~longitude, ~latitude, weight = 10, radius = 10,  color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.2, weight = 2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircleMarkers(~longitude, ~latitude, weight = 10, radius = 10,  color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 10,  color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, radius = 10,  color="cornflowerblue", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, fillOpacity = 0.2, radius = 10,  color="yellow", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="cornflowerblue", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addCircles(~longitude, ~latitude, weight = 5, fillOpacity = 10, radius = 10,  color="yellow", label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="cornflowerblue", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
markerIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/thumbs/star-icon/blue-star-icon-14.png",
iconWidth = 5, iconHeight = 5
)
m <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude,  icon = markerIcon, label = ~as.character(address)) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="red", fillOpacity = 0.8, label = ~as.character(mag))
m
m <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude,  icon = markerIcon, label = ~as.character(address)) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.8, label = ~as.character(mag))
m
m <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude,  icon = markerIcon, label = ~as.character(address)) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~as.character(mag))
m
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
markerIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/thumbs/star-icon/blue-star-icon-14.png",
iconWidth = 10, iconHeight = 10
)
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0("Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
"Chance of earthquake within 100 mi: ", embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0(strong(embassy_risk$address), strong("Chance of earthquake within 20 mi: "), embassy_risk$pct_20mi,"%", "<br>",
strong("Chance of earthquake within 100 mi: "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
View(earthquakes)
View(earthquakes_c)
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0(strong(embassy_risk$address), strong("Chance of earthquake within 20 mi: "), embassy_risk$pct_20mi,"%", "<br>",
strong("Chance of earthquake within 100 mi: "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag, "<br>", "Year:", earthquakes$year))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0(strong(embassy_risk$address), strong("Chance of earthquake within 20 mi: "), embassy_risk$pct_20mi,"%", "<br>",
strong("Chance of earthquake within 100 mi: "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, popup = ~paste("Magnitude:", mag, "<br>", "Year:", earthquakes$year))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0("In next 5 years:", "<br>", "Chance of earthquake within 20 mi: ", embassy_risk$pct_20mi,"%", "<br>",
strong("Chance of earthquake within 100 mi: "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0(strong("In the next 5 years:"), "<br>", strong("Chance of earthquake within 20 mi = "), embassy_risk$pct_20mi,"%", "<br>",
strong("Chance of earthquake within 100 mi = "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0(strong("Chance of significant earthquake in the next 5 years:"), "<br>", strong("Within 20 mi = "), embassy_risk$pct_20mi,"%", "<br>",
strong("Within 100 mi = "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
m2 <- leaflet(embassy_geo) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0(strong("Chance of significant earthquake in the next 5 years:"), "<br>", strong("Within 20 mi = "), embassy_risk$pct_20mi,"%", "<br>",
strong("Within 100 mi = "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
rm(max_5yrs_100mi, max_5yrs_20mi, r_100mi, r_200mi, r_20mi)
rm(counts_100mi, counts_200mi, counts_20mi)
rm(pal)
rm(m)
View(embassy_risk)
max_20mi <- embassy_risk %>%
arrange(desc(pct_20mi)) %>%
slice_head(n=10)
save(max_20mi, file = "max_20mi.Rda")
max_20mi <- embassy_risk %>%
arrange(desc(pct_20mi)) %>%
select(address, count_20mi, pct_20mi) %>%
slice_head(n=10)
save(max_20mi, file = "max_20mi.Rda")
max_20mi <- embassy_risk %>%
arrange(desc(pct_20mi)) %>%
select(address, counts_20mi, pct_20mi) %>%
slice_head(n=10)
save(max_20mi, file = "max_20mi.Rda")
load("~/Documents/GitHub/statedepartment_earthquakes/max_20mi.Rda")
View(max_20mi)
typeof(embassy_risk)
typeof(max_20mi)
embassy_df <- as.data.frame(embassy_risk)
typeof(embassy_df)
max_100mi <- embassy_risk %>%
arrange(desc(pct_100mi)) %>%
select(address, counts_20mi, pct_100mi) %>%
slice_head(n=10)
save(max_100mi, file = "max_100mi.Rda")
rm(embassy_sf)
rm(embassy_df)
rm(earthquakes_sf)
library(janitor)
tabyl(embassy_risk, pct_20)
tabyl(embassy_risk, pct_20mi)
tabyl(embassy_risk, pct_100mi)
quartile(embassy_risk$pct_20mi)
quantile(embassy_risk$pct_20mi)
View(max_100mi)
max_100mi <- embassy_risk %>%
arrange(desc(pct_100mi)) %>%
select(address, counts_100mi, pct_100mi) %>%
rename(counts = counts_100mi) %>%
rename(pct_prob = pct_100mi) %>%
rename(lonlat = geometry)
View(max_100mi)
max_100mi <- embassy_risk %>%
arrange(desc(pct_100mi)) %>%
select(address, counts_100mi, pct_100mi) %>%
rename(counts = counts_100mi) %>%
rename(prob = pct_100mi) %>%
rename(lonlat = geometry)
slice_head(n=10)
save(max_100mi, file = "max_100mi.Rda")
# MAPS ----
max_100mi <- embassy_risk %>%
arrange(desc(pct_100mi)) %>%
select(address, counts_100mi, pct_100mi) %>%
rename(counts = counts_100mi) %>%
rename(prob = pct_100mi) %>%
rename(lonlat = geometry) %>%
slice_head(n=10)
save(max_100mi, file = "max_100mi.Rda")
max_20mi <- embassy_risk %>%
arrange(desc(pct_20mi)) %>%
select(address, counts_20mi, pct_20mi) %>%
rename(counts = counts_20mi) %>%
rename(prob = pct_20mi) %>%
rename(lonlat = geometry) %>%
slice_head(n=10)
save(max_20mi, file = "max_20mi.Rda")
max_100mi <- embassy_risk %>%
arrange(desc(pct_100mi)) %>%
select(address, counts_100mi, pct_100mi) %>%
rename(counts = counts_100mi) %>%
rename(prob = pct_100mi) %>%
rename(lonlat = geometry) %>%
slice_head(n=10)
save(max_100mi, file = "max_100mi.Rda")
mean(embassy_risk$pct_20mi)
View(earthquakes)
sum(is.na(earthquakes$mmi_int))
1380/2204
View(earthquakes)
library(ggmap)
library(tidyverse)
library(nngeo)
library(leaflet)
library(mapview)
library(htmltools)
load("embassy_risk.Rda")
load("~/Documents/GitHub/statedepartment_earthquakes/embassy_geo.Rda")
m2 <- leaflet(embassy_geocoded) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0(strong("Chance of significant earthquake in the next 5 years:"), "<br>", strong("Within 20 mi = "), embassy_risk$pct_20mi,"%", "<br>",
strong("Within 100 mi = "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
earthquakes_c <- earthquakes %>%
select(year, location_name, latitude, longitude, mag, focal_depth_km) %>%
select(location_name, longitude, latitude, mag) %>%
filter(!is.na(latitude))
# load data
load("earthquakes.Rda")
load("embassy_geo.Rda")
earthquakes_c <- earthquakes %>%
select(year, location_name, latitude, longitude, mag, focal_depth_km) %>%
select(location_name, longitude, latitude, mag) %>%
filter(!is.na(latitude))
m2 <- leaflet(embassy_geocoded) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0(strong("Chance of significant earthquake in the next 5 years:"), "<br>", strong("Within 20 mi = "), embassy_risk$pct_20mi,"%", "<br>",
strong("Within 100 mi = "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
markerIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/thumbs/star-icon/blue-star-icon-14.png",
iconWidth = 10, iconHeight = 10
)
m2 <- leaflet(embassy_geocoded) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions()) %>%
addMarkers(~longitude, ~latitude, icon = markerIcon, label = as.character(embassy_risk$address), popup = ~paste0(strong("Chance of significant earthquake in the next 5 years:"), "<br>", strong("Within 20 mi = "), embassy_risk$pct_20mi,"%", "<br>",
strong("Within 100 mi = "), embassy_risk$pct_100mi, "%") ) %>%
addCircles(data = earthquakes_c, ~longitude, ~latitude, weight = 2, radius=20,
color="yellow", fillOpacity = 0.2, label = ~paste("Magnitude:", mag))
m2
load("~/Documents/GitHub/statedepartment_earthquakes/max_20mi.Rda")
load("~/Documents/GitHub/statedepartment_earthquakes/max_100mi.Rda")
View(max_20mi)
View(max_100mi)
View(max_20mi)
?kable
View(embassy_risk)
View(max_20mi)
# Load packages
library(tidyverse)
library(janitor)
library(countrycode)
library(leaflet)
kages
library(tidyverse)
library(janitor)
library(countrycode)
library(leaflet)
# Load data
earthquakes_raw <- read.csv("earthquakes_raw.csv")
earthquakes <- earthquakes_raw %>%
clean_names()
View(earthquakes)
# Remove extraneous columns
earthquakes <- earthquakes %>%
select(-search_parameters)
e blank top row
earthquakes <- earthquakes[-c(1), ]
# remove blank top row
earthquakes <- earthquakes[-c(1), ]
# create new variable with clean country names
earthquakes <- earthquakes %>%
mutate(location_name = gsub(":", "", location_name)) %>%
mutate(location_name = gsub("-", " ", location_name)) %>%
mutate(location_name = gsub(";", "", location_name)) %>%
mutate(country = countryname(location_name))
# examine country names that didn't match
country_na <- earthquakes %>%
filter(is.na(country))
View(country_na)
country_na <- country_na %>%
mutate(country = ifelse(str_detect(location_name,"ALASKA"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"ALABAMA"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"COLORADO"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"CALIFORNIA"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"HAWAII"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"IDAHO"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"ILLINOIS"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"KENTUCKY"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"MARYLAND"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"MONTANA"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"UTAH"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"WYOMING"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"TEXAS"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"NORTH CAROLINA"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"NEVADA"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"NEW YORK"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"OKLAHOMA"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"OREGON"), "USA", country)) %>%
mutate(country = ifelse(str_detect(location_name,"WASHINGTON"), "USA", country))
countrylist <- countrycode::codelist$country.name.en
# make quick map of earthquake events in leaflet to visually inspect locations
e <- leaflet(earthquakes) %>% addProviderTiles(providers$CartoDB.DarkMatter) %>%
addCircles(~longitude, ~latitude, weight = 2, radius=20,
color="#ffa500", fillOpacity = 0.8)
e
library(rvest)
embassy_page <- read_html("https://www.usembassy.gov/")
links <- embassy_page %>%
html_nodes("a.pcs-post-title") %>%
html_attr('href')
links
names <- embassy_page %>%
html_nodes("a.pcs-post-title") %>%
html_attr('title')
names
embassy_links <- as.data.frame(links) %>%
mutate(id = row_number())
embassy_names <- as.data.frame(names) %>%
mutate(id = row_number())
embassy_locations <- cbind(embassy_names, embassy_links) %>%
select(-id)
View(embassy_links)
embassy_locations <- cbind(embassy_names, embassy_links) %>%
select(-id)
View(embassy_locations)
results <- c()
for(i in links) {
page <- read_html(paste0(i))
text <- page %>%
html_nodes("div.cityname1") %>%
html_text()
results <- c(results, text)
}
results
